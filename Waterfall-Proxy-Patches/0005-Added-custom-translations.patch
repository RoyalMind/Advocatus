From e6152e3e9b2ecfee9fd0a95f9d16ce5f29cd49dc Mon Sep 17 00:00:00 2001
From: Carlos Gallegos <40046747+CharlyZest@users.noreply.github.com>
Date: Thu, 4 Nov 2021 22:50:24 -0600
Subject: [PATCH] Added custom translations


diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index c804ee94..514e737e 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -791,7 +791,5 @@ public class BungeeCord extends ProxyServer
 
     /* Advocatus Start */
 
-    public ResourceBundle getBaseBundle() { return baseBundle; }
-
     /* Advocatus End */
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 90496d6b..7168f895 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -69,6 +69,7 @@ import net.md_5.bungee.protocol.packet.ScoreboardScore;
 import net.md_5.bungee.protocol.packet.SetCompression;
 import net.md_5.bungee.protocol.packet.TabCompleteResponse;
 import net.md_5.bungee.tab.TabList;
+import net.royalmind.minecraft.software.advocatus.Advocatus;
 
 @RequiredArgsConstructor
 public class DownstreamBridge extends PacketHandler
@@ -296,7 +297,7 @@ public class DownstreamBridge extends PacketHandler
 
             brand = ByteBufAllocator.DEFAULT.heapBuffer();
             //DefinedPacket.writeString( bungee.getName() + " <- " + serverBrand, brand ); // Waterfall
-            DefinedPacket.writeString(ChatColor.YELLOW + "play.royalmind.net" + ChatColor.RESET, brand); // Advocatus
+            DefinedPacket.writeString(Advocatus.getInstance().getTranslation("brand-name") + ChatColor.RESET, brand); // Advocatus
             pluginMessage.setData( brand );
             brand.release();
             // changes in the packet are ignored so we need to send it manually
diff --git a/proxy/src/main/java/net/royalmind/minecraft/software/advocatus/Advocatus.java b/proxy/src/main/java/net/royalmind/minecraft/software/advocatus/Advocatus.java
index c7dcaeaa..e1184abc 100644
--- a/proxy/src/main/java/net/royalmind/minecraft/software/advocatus/Advocatus.java
+++ b/proxy/src/main/java/net/royalmind/minecraft/software/advocatus/Advocatus.java
@@ -1,13 +1,15 @@
 package net.royalmind.minecraft.software.advocatus;
 
 import java.io.File;
+import java.io.InputStream;
 import java.text.MessageFormat;
 import java.util.Enumeration;
+import java.util.Locale;
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
 
 import de.leonhard.storage.Yaml;
-import net.md_5.bungee.BungeeCord;
+import net.royalmind.minecraft.library.colorizer.Colorizer;
 import net.royalmind.minecraft.software.advocatus.util.Logger;
 
 public class Advocatus
@@ -22,47 +24,66 @@ public class Advocatus
     public Advocatus()
     {
         INSTANCE = this;
-        baseMessages = BungeeCord.getInstance().getBaseBundle();
+        loadBaseBundle();
+    }
+
+    private void loadBaseBundle()
+    {
+        try
+        { baseMessages = ResourceBundle.getBundle("messages-es"); }
+        catch ( MissingResourceException ex )
+        { baseMessages = ResourceBundle.getBundle( "messages", Locale.ENGLISH ); }
     }
 
     public void loadCustomBundle()
     {
+        final String customMessagesFileName = "messages-es";
         try
         {
-            File file = new File( baseConfigDir, "messages.yml" );
-            customMessages = new Yaml(file.getName(), baseConfigDir);
+            File file = new File( baseConfigDir, customMessagesFileName );
+
             if (!file.exists())
             {
-                try
+                file.mkdir();
+
+                customMessages = new Yaml(file);
+                final Enumeration<String> keys = baseMessages.getKeys();
+
+                while (keys.hasMoreElements())
+                {
+                    final String key = keys.nextElement();
+                    if (customMessages.get(key, "").isEmpty()) customMessages.set(key, baseMessages.getString(key));
+                }
+            }
+            else
+            {
+                customMessages = new Yaml(file);
+                final Enumeration<String> keys = baseMessages.getKeys();
+
+                while (keys.hasMoreElements())
                 {
-                    file.mkdir();
-                    final Enumeration<String> keys = baseMessages.getKeys();
-                    while (keys.hasMoreElements())
-                    {
-                        final String key = keys.nextElement();
-                        customMessages.set(key, baseMessages.getString(key));
-                    }
+                    final String key = keys.nextElement();
+                    if (customMessages.get(key, "").isEmpty()) customMessages.set(key, baseMessages.getString(key));
                 }
-                catch (Exception ex) { ex.printStackTrace(); }
             }
         }
-        catch (Exception ex) { Logger.error("Could not load custom messages.yml for advocatus", ex); }
+        catch (Exception ex) { ex.printStackTrace(); }
     }
 
     public String getTranslation(String name, Object... args)
     {
-        String translation = "<translation '" + name + "' missing>";
+        String translation = "&c<translation '" + name + "' missing>&r";
         try
         {
-            final String string = customMessages != null && customMessages.contains( name )
+            final String VALUE = customMessages != null && customMessages.contains( name )
                     ? customMessages.getString( name )
                     : baseMessages.getString( name );
 
-            translation = ( args.length == 0 ) ? string : MessageFormat.format( string, args );
-
-        } catch ( MissingResourceException ex ) { Logger.error("Fallo al cargar la traduccion de: \""+ name +"\"", ex); }
+            translation = ( args.length == 0 ) ? VALUE : MessageFormat.format( VALUE, args );
+        }
+        catch ( MissingResourceException ex ) { Logger.error("Fallo al cargar la traduccion de: \""+ name +"\"", ex); }
 
-        return translation;
+        return Colorizer.translate(translation);
     }
 
     public String getName() { return FORK_NAME; }
diff --git a/proxy/src/main/resources/messages-es.properties b/proxy/src/main/resources/messages-es.properties
new file mode 100644
index 00000000..bbec93b5
--- /dev/null
+++ b/proxy/src/main/resources/messages-es.properties
@@ -0,0 +1,40 @@
+alert=&8[&4Anuncio&8]&r 
+already_connected=&c¡Ya esta conectado al servidor!
+already_connected_proxy=&cYa estas conectado a este proxy!
+already_connecting=&c¡Ya esta conectando a este servidor!
+command_list=&a[{0}] &e({1})=&r{2}
+connect_kick=&cNo se pudo conectar a &e{0}&c={1}
+current_server=&6Actualmente estas conectado a {0}.
+fallback_kick=&cNo se pudo conectar a un servidor predeterminado o alternativo. Vuelve a intentarlo mas tarde={0}
+fallback_lobby=&cNo se pudo conectar al servidor de destino, se le ha trasladado a un servidor de reserva.
+timeout=&eServidor no accesible (tiempo de espera). ¿Desconectado? ¿Direccion/puerto/cortafuegos configurados incorrectamente?
+lost_connection=&r[&e&lRoyal&6&lMind &f&lNetwork&r] Conexion perdida con nuestros servidores.
+mojang_fail=Se produjo un error al contactar con los servidores de inicio de sesion de Mojang, ¿Estan inactivos? :(
+no_permission=&c¡No tienes permiso para ejecutar este comando!
+no_server=&cEl servidor especificado no existe.
+no_server_permission=&cNo tienes permiso para acceder a este servidor.
+outdated_client=Cliente desactualizado! Por favor usa la version {0}
+outdated_server=¡Servidor desactualizado! Todavia estoy en {0}
+proxy_full=¡El servidor esta lleno!
+restart=&r[&e&lRoyal&6&lMind &f&lNetwork&r] Reiniciando network
+server_list=&6Puede conectarse a los siguientes servidores en este momento=
+server_went_down=&cEl servidor en el que estaba anteriormente se cayo, se ha conectado a un servidor de reserva
+total_players=Total de jugadores en linea={0}
+name_invalid=Nombre de usuario contiene caracteres invalidos.
+ping_cannot_connect=&r[&e&lRoyal&6&lMind &f&lNetwork&r] &cNo se puede conectar al servidor.
+offline_mode_player=Cuenta no autenticada con Minecraft.net
+message_needed=&cDebes proporcionar un mensaje.
+error_occurred_player=&cSe produjo un error al analizar su mensaje. (Coloca el cursor sobre los detalles)
+error_occurred_console=&cSe produjo un error al analizar su mensaje={0}
+click_to_connect=Haga clic para conectarse al servidor
+username_needed=&cSiga este comando con un nombre de usuario.
+user_not_online=&cEse usuario no esta en linea.
+user_online_at=&a{0} &resta en linea en {1}
+send_cmd_usage=&cNo hay suficientes argumentos, uso=/send <servidor|jugador|all|current> <servidor objetivo>
+player_only=&cSolo en el juego los jugadores pueden usar este comando.
+you_got_summoned=&6Transportado a {0} por {1}
+command_perms_groups=&6Tienes los siguientes grupos={0}
+command_perms_permission=&9- {0}
+command_ip=&9La IP de {0} es {1}
+illegal_chat_characters=&cCaracteres ilegales en el chat ({0})
+brand-name=&e&oplay.royalmind.net
\ No newline at end of file
-- 
2.33.0.windows.2

